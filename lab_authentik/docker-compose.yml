# docker-compose.yml (Versão Final com todas as correções)

services:
  # -------------------- TRAEFIK (REVERSE PROXY) --------------------
  traefik:
    image: traefik:v3.0
    container_name: traefik
    user: "0"
    command:
      - "--log.level=INFO"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=proxy"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--providers.file.filename=/etc/traefik/config/dynamic.yml"
      - "--providers.file.watch=true"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/dynamic.yml:/etc/traefik/config/dynamic.yml:ro
      - ./traefik/certs:/certs:ro
    networks:
      - proxy
    depends_on:
      - authentik-server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.juarez.local`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls=true"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.middlewares=authentik@docker"

  # -------------------- AUTHENTIK (SSO) --------------------
  authentik-postgres:
    image: postgres:15-alpine
    container_name: authentik-postgres
    restart: unless-stopped
    volumes:
      - authentik-db:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: authentik
      POSTGRES_DB: authentik
      POSTGRES_GUACAMOLE_PASSWORD: ${POSTGRES_GUACAMOLE_PASSWORD}
    networks:
      - authentik-internal

  authentik-redis:
    image: redis:alpine
    container_name: authentik-redis
    restart: unless-stopped
    networks:
      - authentik-internal

  authentik-worker:
    image: ghcr.io/goauthentik/server:latest
    container_name: authentik-worker
    restart: unless-stopped
    user: "0"
    depends_on:
      - authentik-postgres
      - authentik-redis
    command: worker
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_POSTGRESQL__PASSWORD}
      AUTHENTIK_REDIS__HOST: authentik-redis
      TZ: ${TZ}
    volumes:
      - ./authentik/media:/media
      - ./authentik/templates:/templates
      - ./authentik/geoip:/geoip
    networks:
      - authentik-internal

  authentik-server:
    image: ghcr.io/goauthentik/server:latest
    container_name: authentik-server
    restart: unless-stopped
    depends_on:
      - authentik-worker
    command: server
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_POSTGRESQL__PASSWORD}
      AUTHENTIK_REDIS__HOST: authentik-redis
      TZ: ${TZ}
    volumes:
      - ./authentik/media:/media
      - ./authentik/templates:/templates
      - ./authentik/geoip:/geoip
    networks:
      - proxy
      - authentik-internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authentik.rule=Host(`auth.juarez.local`)"
      - "traefik.http.routers.authentik.entrypoints=websecure"
      - "traefik.http.routers.authentik.tls=true"
      - "traefik.http.services.authentik.loadbalancer.server.port=9000"
      - "traefik.http.middlewares.authentik.forwardauth.address=http://authentik-server:9000/outpost.goauthentik.io/auth/traefik"
      - "traefik.http.middlewares.authentik.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.authentik.forwardauth.authResponseHeaders=X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name"

  # -------------------- GUACAMOLE --------------------
  guacd:
    image: guacamole/guacd:1.5.5
    container_name: guacd
    restart: unless-stopped
    networks:
      - authentik-internal

  guacamole-init-db:
    image: guacamole/guacamole:1.5.5
    entrypoint: ""
    command: /opt/guacamole/bin/initdb.sh --postgres
    depends_on:
      - authentik-postgres
    environment:
      # --- CORRIGIDO: Nomes de variáveis alinhados com o serviço principal do Guacamole ---
      POSTGRESQL_HOSTNAME: authentik-postgres
      POSTGRESQL_DATABASE: guacamole_db
      POSTGRESQL_USER: guacamole_user
      POSTGRESQL_PASSWORD: ${POSTGRES_GUACAMOLE_PASSWORD}
    networks:
      - authentik-internal

  guacamole:
    image: guacamole/guacamole:1.5.5
    container_name: guacamole
    restart: unless-stopped
    depends_on:
      - guacd
      - authentik-postgres
    volumes:
      - ./guacamole/extensions:/opt/guacamole/extensions
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRESQL_HOSTNAME: authentik-postgres
      POSTGRESQL_DATABASE: guacamole_db
      POSTGRESQL_USER: guacamole_user
      POSTGRESQL_PASSWORD: ${POSTGRES_GUACAMOLE_PASSWORD}
      OIDC_ISSUER: "https://auth.juarez.local/application/o/guacamole/"
      OIDC_CLIENT_ID: ${GUACAMOLE_OIDC_CLIENT_ID}
      OIDC_CLIENT_SECRET: ${GUACAMOLE_OIDC_CLIENT_SECRET}
      OIDC_REDIRECT_URI: "https://guac.juarez.local/api/ext/oidc/callback"
      OIDC_USERNAME_CLAIM: "preferred_username"
    networks:
      - authentik-internal
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.guacamole.rule=Host(`guac.juarez.local`)"
      - "traefik.http.routers.guacamole.entrypoints=websecure"
      - "traefik.http.routers.guacamole.tls=true"
      - "traefik.http.services.guacamole.loadbalancer.server.port=8080"

# -------------------- DEFINIÇÃO DAS REDES E VOLUMES --------------------
networks:
  proxy:
    name: proxy
  authentik-internal:
    internal: true

volumes:
  authentik-db:
