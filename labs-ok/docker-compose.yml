# docker-compose.yml - VERSÃO CORRIGIDA
services:
  guacamole:
    image: guacamole/guacamole:1.5.4
    container_name: guacamole
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_HOSTNAME: postgres
      POSTGRES_DATABASE: ${POSTGRES_DB_GUACAMOLE}
      POSTGRES_USER: ${POSTGRES_USER_GUACAMOLE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_GUACAMOLE}
      OPENID_AUTHORIZATION_ENDPOINT: "http://keycloak:8080/realms/guacamole/protocol/openid-connect/auth"
      OPENID_JWKS_ENDPOINT: "http://keycloak:8080/realms/guacamole/protocol/openid-connect/certs"
      OPENID_ISSUER: "http://keycloak:8080/realms/guacamole"
      OPENID_CLIENT_ID: "guacamole-client"
      # ATENÇÃO: Use o IP correto do seu servidor ou um nome de domínio (DNS)
      OPENID_REDIRECT_URI: "http://192.168.0.12:8080/"
    depends_on:
      postgres:
        condition: service_healthy # Espera o banco de dados estar realmente pronto
      guacd:
        condition: service_started
    networks:
      - guacamole-net

  guacd:
    image: guacamole/guacd:1.5.4
    container_name: guacd
    restart: unless-stopped
    networks:
      - guacamole-net

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    volumes:
      - ./guacamole-data:/var/lib/postgresql/data
      # Este volume executa o script de inicialização do Guacamole na primeira execução
      - ./initdb.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      # Usuário/banco de dados para o Guacamole
      POSTGRES_DB: ${POSTGRES_DB_GUACAMOLE}
      POSTGRES_USER: ${POSTGRES_USER_GUACAMOLE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_GUACAMOLE}
      # Criação de um banco de dados separado para o Keycloak
      POSTGRES_MULTIPLE_DATABASES: ${POSTGRES_DB_KEYCLOAK}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER_GUACAMOLE} -d ${POSTGRES_DB_GUACAMOLE}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - guacamole-net

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    container_name: keycloak
    restart: unless-stopped
    ports:
      - "8180:8080"
    environment:
      # Credenciais de admin do Keycloak
      KEYCLOAK_ADMIN: ${KEYCLOAK_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
      # Configuração para usar o PostgreSQL (MODO PRODUÇÃO)
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_DATABASE: ${POSTGRES_DB_KEYCLOAK}
      KC_DB_USERNAME: ${POSTGRES_USER_GUACAMOLE} # Reutilizando o mesmo usuário
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD_GUACAMOLE}
      KC_DB_SCHEMA: public
      # URL externa do Keycloak (ESSENCIAL)
      KC_HOSTNAME: http://192.168.0.12:8180
    command: start # Usa o comando de produção, não o de desenvolvimento
    depends_on:
      - postgres
    networks:
      - guacamole-net

networks:
  guacamole-net:
    driver: bridge
